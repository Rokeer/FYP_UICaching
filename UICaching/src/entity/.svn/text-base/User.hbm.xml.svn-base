<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<!-- 
    Mapping file autogenerated by MyEclipse Persistence Tools
-->
<hibernate-mapping>
    <class name="entity.User" table="user">
        <id name="userId" type="java.lang.Integer">
            <column name="userId" />
            <generator class="native" />
        </id>
        <property name="firstName" type="java.lang.String">
            <column name="firstName" length="50" not-null="true" />
        </property>
        
        <property name="secondName" type="java.lang.String">
            <column name="secondName" length="50" not-null="true" />
        </property>
        
        <property name="email" type="java.lang.String">
            <column name="email" length="50" not-null="true" />
        </property>
        
        <property name="password" type="java.lang.String">
            <column name="password" length="50" not-null="true" />
        </property>
        
        <property name="nickname" type="java.lang.String">
            <column name="nickname" length="50" not-null="true" />
        </property>
        
        <property name="avatar" type="java.lang.String">
            <column name="avatar" length="50" not-null="true" />
        </property>
        
        <property name="gender" type="java.lang.Integer">
            <column name="gender" not-null="true" />
        </property>
		
        <property name="major" type="java.lang.Integer">
            <column name="major" not-null="true" />
        </property>
        
        <property name="biographical" type="java.lang.String">
            <column name="biographical" length="250" not-null="true" />
        </property>
        
        <property name="secondEmail" type="java.lang.String">
            <column name="secondEmail" length="50" not-null="true" />
        </property>
        
        <property name="homeLatitude" type="java.lang.Double">
            <column name="homeLatitude" not-null="true" />
        </property>
        
        <property name="homeLongitude" type="java.lang.Double">
            <column name="homeLongitude" not-null="true" />
        </property>
        
        <property name="permission" type="java.lang.Integer">
            <column name="permission"  not-null="true" />
        </property>
        
        <property name="regDate" type="java.lang.String">
            <column name="regDate" length="50" not-null="true" />
        </property>
        
        <property name="certificateCode" type="java.lang.String">
            <column name="certificateCode" length="50" not-null="true" />
        </property>
        
        <property name="loginToken" type="java.lang.String">
            <column name="loginToken" length="50" />
        </property>
        
        <property name="loginSeries" type="java.lang.String">
            <column name="loginSeries" length="50" />
        </property>
        
        
          
        <set name="uiCaches" cascade="save-update" inverse="true">
        	<key column="user_userId" />
        	<one-to-many class="entity.UiCache" />
        </set>
        
        <set name="logs" cascade="save-update" inverse="true">
        	<key column="user_userId" />
        	<one-to-many class="entity.Log" />
        </set>
        
        <set name="logPictures" cascade="save-update" inverse="true">
        	<key column="user_userId" />
        	<one-to-many class="entity.LogPicture" />
        </set>
        
        <set name="uiCachePictures" cascade="save-update" inverse="true">
        	<key column="user_userId" />
        	<one-to-many class="entity.UiCachePicture" />
        </set>
        
        <set name="diggers" cascade="save-update" inverse="true">
        	<key column="user_userId" />
        	<one-to-many class="entity.Digger" />
        </set>
        
        <set name="favorites" cascade="save-update" inverse="true">
        	<key column="user_userId" />
        	<one-to-many class="entity.Favorite" />
        </set>
        
        
    </class>
</hibernate-mapping>
